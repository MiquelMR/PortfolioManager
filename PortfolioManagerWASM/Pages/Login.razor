@* @page "/login"
@using PortfolioManagerWASM.Services.IService
@using PortfolioManagerWASM.Models.DTOs
@using System.ComponentModel.DataAnnotations
@inject IUserService UserService

<h3>Login</h3>

<EditForm Model="@loginUser" OnValidSubmit="@AuthenticateUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="loginUser.Email" />
        <ValidationMessage For="@(() => loginUser.Email)" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginUser.Password" />
        <ValidationMessage For="@(() => loginUser.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(Message))
{
    <div class="alert alert-info mt-3">@Message</div>
}

@code {
    private UserLoginDto loginUserDto = new UserLoginDto();
    private string Message = string.Empty;

    private async Task AuthenticateUser()
    {
        try
        {
            var isAuthenticated = await UserService.Login(loginUserDto);
            Message = isAuthenticated ? "Login successful!" : "Invalid email or password.";
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
        }
    }
}
 *@