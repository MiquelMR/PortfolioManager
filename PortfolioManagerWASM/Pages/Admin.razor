@using Microsoft.AspNetCore.Authorization
@using PortfolioManagerAPI.Helpers
@using PortfolioManagerWASM.Models
@using PortfolioManagerWASM.Services.IService
@inject IUserService userService
@inject IAssetService assetService
@attribute [Authorize]

@page "/admin"
<PageTitle>Community</PageTitle>

<h3>Admin</h3>

<div class="container">

    <div class="dropdown">
        <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            Assets
        </button>

        <ul class="dropdown-menu">
            <!--Asset List-->
            @for (int i = 0; i < AllAssets.Count; i++)
            {
                int index = i;
                <button @onclick="()=>SelectAsset(index)" type="button" class="list-group-item list-group-item-action d-flex justify-content-between">@AllAssets[index].Name</button>
            }
        </ul>
    </div>

    <!--Active Asset-->
    <div class="row">

        @{
            foreach (var prop in typeof(Asset).GetProperties().Where(p => p.PropertyType == typeof(string)))
            {
                <p>@prop.Name: @prop.GetValue(FocusAsset)</p>
            }
        }
    </div>
    <div class="row">
        <div class="col">
            @if (FocusAsset.Icon != null && FocusAsset.Icon.Length > 0)
            {
                <img src="@TypeConverter.GetBase64String(@FocusAsset.Icon)" alt="Icon" class="img-fluid asset-icon">
            }
            else
            {
                <img src="icons/bar-chart-line.svg"/>
            }
        </div>
    </div>
</div>


