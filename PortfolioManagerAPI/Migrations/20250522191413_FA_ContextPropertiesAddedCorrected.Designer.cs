// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioManagerAPI.Data;

#nullable disable

namespace PortfolioManagerAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522191413_FA_ContextPropertiesAddedCorrected")]
    partial class FA_ContextPropertiesAddedCorrected
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PortfolioManagerAPI.Models.FinancialAsset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("FavorsGrowth")
                        .HasColumnType("int");

                    b.Property<int>("FavorsInflation")
                        .HasColumnType("int");

                    b.Property<int>("GrowthVsValue")
                        .HasColumnType("int");

                    b.Property<string>("IconFilename")
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("ReferenceETFSite")
                        .HasColumnType("longtext");

                    b.Property<string>("ReferenceIndex")
                        .HasColumnType("longtext");

                    b.Property<int>("VolatilyLevel")
                        .HasColumnType("int");

                    b.HasKey("AssetId");

                    b.ToTable("assets");
                });

            modelBuilder.Entity("PortfolioManagerAPI.Models.Portfolio", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PortfolioId"));

                    b.Property<int>("Accessibility")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("IconFilename")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Owner")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PortfolioId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("PortfolioManagerAPI.Models.PortfolioAsset", b =>
                {
                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("AllocationPercentage")
                        .HasColumnType("int");

                    b.HasKey("PortfolioId", "AssetId");

                    b.HasIndex("AssetId");

                    b.ToTable("PortfolioAssets");
                });

            modelBuilder.Entity("PortfolioManagerAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AvatarFilename")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("PortfolioManagerAPI.Models.PortfolioAsset", b =>
                {
                    b.HasOne("PortfolioManagerAPI.Models.FinancialAsset", "FinancialAsset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioManagerAPI.Models.Portfolio", "Portfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialAsset");

                    b.Navigation("Portfolio");
                });
#pragma warning restore 612, 618
        }
    }
}
